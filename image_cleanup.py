import os
import re
import json

"""
    Madina: I created this script to process all the file names
    in the images folder to extract the address as well as
    the year of the image, in addition to the image type (photo vs. floor plan)

    The objects generated by this script are then imported into the database
    using the script image_import.js
"""


directory = os.fsencode("./images/")

locations = {}

def extractAddress(filename):
    address = ""

    if "Вахруши" in filename and "-" in filename:
        no_city = filename[filename.rindex("Вахруши") + 6 + 1:]
        start_address = no_city[no_city.index("-") + 1:] if "-" in no_city else no_city
        i = start_address.index("-") if "-" in start_address else len(start_address)
        address = start_address[:i].strip()

        i = address.index("_") if "_" in address else len(address)
        address = address[:i].strip()

    return address

for file in os.listdir(directory):

    filename = os.fsdecode(file)
    if filename.endswith(".jpg") or filename.endswith(".JPG"):

        year = 0
        x = re.search(r'\d{4}г', filename)
        if x:
            year = x.group()[:-1]

        if "фото" in filename:
            address = extractAddress(filename)
            if address:
                if "фото" in address:
                    continue
                else:
                    if address not in locations:
                        locations[address] = []

                    locations[address].append({"type":"фото", "filename": filename, "year": year})

        elif "План".lower() in filename.lower():
            address = extractAddress(filename)
            if address:
                if address not in locations:
                    locations[address] = []

                locations[address].append({"type":"План", "filename":filename, "year": year})
    else:
        continue


j= json.dumps(locations, separators=(',', ':'), ensure_ascii=False)

f = open("images.json", "w")
f.write(j)
f.close()
